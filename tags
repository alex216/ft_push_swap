!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/yliu/Desktop/cursus/pushswap/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/a4d751bc/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
$(BONUS_NAME)	Makefile	/^$(BONUS_NAME):	compile_bonus$/;"	t
$(BONUS_OBJS_DIR)/%.o	Makefile	/^$(BONUS_OBJS_DIR)\/%.o:$(MAKE_B_OBJDIR) $(BONUS_SRCS_DIR)\/%.c $(BONUS_HEADERS)$/;"	t
$(NAME)	Makefile	/^$(NAME):		status_check$/;"	t
$(NAME)	libft/Makefile	/^$(NAME):		status_check$/;"	t
$(OBJS_DIR)%.o	libft/Makefile	/^$(OBJS_DIR)%.o:	$(MAKE_OBJDIR) $(DROW_GRA) $(SRCS_DIR)%.c $(HEADERS)$/;"	t
$(OBJS_DIR)/%.o	Makefile	/^$(OBJS_DIR)\/%.o:$(MAKE_OBJDIR) $(SRCS_DIR)\/%.c $(HEADERS)$/;"	t
0	.vscode/launch.json	/^				"11 22 33"$/;"	s	array:configurations.0.args
0	.vscode/launch.json	/^		{$/;"	o	array:configurations
0	.vscode/tasks.json	/^				"debug"$/;"	s	array:tasks.0.args
0	.vscode/tasks.json	/^		{$/;"	o	array:tasks
0	src/.vscode/c_cpp_properties.json	/^                "${workspaceFolder}\/..\/**"$/;"	s	array:configurations.0.includePath
0	src/.vscode/c_cpp_properties.json	/^                "\/Library\/Developer\/CommandLineTools\/SDKs\/MacOSX.sdk\/System\/Library\/Fram/;"	s	array:configurations.0.macFrameworkPath
0	src/.vscode/c_cpp_properties.json	/^        {$/;"	o	array:configurations
ARG_LENGTH	push_swap_tester/src/const.py	/^ARG_LENGTH = 5$/;"	v
ArgRangeError	push_swap_tester/src/exception.py	/^class ArgRangeError(PushSwapError):$/;"	c
BASE_INC_DIR	Makefile	/^BASE_INC_DIR	= .\/libft\/inc$/;"	m
BLUE	Makefile	/^BLUE			=	\\033[0;94m$/;"	m
BLUE	libft/Makefile	/^BLUE			=	\\033[0;94m$/;"	m
BONUS_HEADERS	Makefile	/^BONUS_HEADERS	= $(HEADERS) .\/bonus_inc\/push_swap_bonus.h$/;"	m
BONUS_INC_DIR	Makefile	/^BONUS_INC_DIR	= $(BASE_INC_DIR) .\/inc .\/bonus_inc$/;"	m
BONUS_NAME	Makefile	/^BONUS_NAME		= kari_checker$/;"	m
BONUS_OBJS	Makefile	/^BONUS_OBJS		= $(subst $(BONUS_SRCS_DIR), $(BONUS_OBJS_DIR), $(BONUS_SRCS:.c=.o))$/;"	m
BONUS_OBJS_DIR	Makefile	/^BONUS_OBJS_DIR	= .\/bonus_obj$/;"	m
BONUS_SRCS	Makefile	/^BONUS_SRCS 	   	= $(BONUS_SRCS_DIR)\/checker_kari.c$/;"	m
BONUS_SRCS_DIR	Makefile	/^BONUS_SRCS_DIR	= .\/bonus_src$/;"	m
BUFFER_SIZE	libft/inc/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
CFLAGS	Makefile	/^CFLAGS			= -Wall -Wextra -Werror -g -fsanitize=address -fsanitize=integer -fsanitize=undefined$/;"	m
CFLAGS	libft/Makefile	/^CFLAGS			= -Wall -Wextra -Werror$/;"	m
CHECKER_NAME	push_swap_tester/src/const.py	/^CHECKER_NAME = "checker"$/;"	v
CODE_CYAN	push_swap_tester/src/const.py	/^CODE_CYAN = 36$/;"	v
CODE_GREEN	push_swap_tester/src/const.py	/^CODE_GREEN = 32$/;"	v
CODE_RED	push_swap_tester/src/const.py	/^CODE_RED = 31$/;"	v
CYAN	Makefile	/^CYAN			=	\\033[0;96m$/;"	m
CYAN	libft/Makefile	/^CYAN			=	\\033[0;96m$/;"	m
C_LIST	libft/inc/ft_printf.h	/^# define C_LIST /;"	d
CommandNotFoundError	push_swap_tester/src/exception.py	/^class CommandNotFoundError(PushSwapError):$/;"	c
DEF_COLOR	Makefile	/^DEF_COLOR		=	\\033[0;39m$/;"	m
DEF_COLOR	libft/Makefile	/^DEF_COLOR		=	\\033[0;39m$/;"	m
ECHO	Makefile	/^ECHO			= echo -e$/;"	m
ECHO	libft/Makefile	/^ECHO			= echo -e$/;"	m
EXIT_ERROR	inc/push_swap.h	/^# define EXIT_ERROR /;"	d
ExecutePermissionError	push_swap_tester/src/exception.py	/^class ExecutePermissionError(PushSwapError):$/;"	c
FD_MAX	libft/inc/get_next_line.h	/^#  define FD_MAX /;"	d
FT_PRINTF_H	libft/inc/ft_printf.h	/^# define FT_PRINTF_H$/;"	d
GET_NEXT_LINE_H	libft/inc/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
GRAY	Makefile	/^GRAY			=	\\033[0;90m$/;"	m
GRAY	libft/Makefile	/^GRAY			=	\\033[0;90m$/;"	m
GREEN	Makefile	/^GREEN			=	\\033[1;92m$/;"	m
GREEN	libft/Makefile	/^GREEN			=	\\033[1;92m$/;"	m
HEADERS	Makefile	/^HEADERS 	   	= $(ORIGIN_HEADERS) .\/inc\/push_swap.h$/;"	m
HEADERS	libft/Makefile	/^HEADERS 		= $(wildcard $(INCLUDE)\/*.h)$/;"	m
HEX_NUMBER	libft/inc/ft_printf.h	/^# define HEX_NUMBER /;"	d
INCLUDE	libft/Makefile	/^INCLUDE			= .\/inc\/$/;"	m
INT_MAX	push_swap_tester/src/const.py	/^INT_MAX = 2147483647$/;"	v
INT_MIN	push_swap_tester/src/const.py	/^INT_MIN = -2147483648$/;"	v
LIB	Makefile	/^LIB				= $(LIB_DIR)\/$(LIBRARY)$/;"	m
LIBFT_H	libft/inc/libft.h	/^# define LIBFT_H$/;"	d
LIBRARY	Makefile	/^LIBRARY			= libft.a$/;"	m
LIB_DIR	Makefile	/^LIB_DIR			= .\/libft$/;"	m
LINE	Makefile	/^LINE			= 	\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\/;"	m
LINE	libft/Makefile	/^LINE			=   \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\/;"	m
LOEWRCASE_HEX_ARRAY	libft/inc/ft_printf.h	/^# define LOEWRCASE_HEX_ARRAY /;"	d
LOG_FILE_NAME	push_swap_tester/src/const.py	/^LOG_FILE_NAME = "result.log"$/;"	v
MAGENTA	Makefile	/^MAGENTA			=	\\033[0;95m$/;"	m
MAGENTA	libft/Makefile	/^MAGENTA			=	\\033[0;95m$/;"	m
MAKE_B_OBJDIR	Makefile	/^MAKE_B_OBJDIR	= $(shell mkdir -p $(subst $(BONUS_SRCS_DIR), $(BONUS_OBJS_DIR), $(dir $(BONUS_SRC/;"	m
MAKE_OBJDIR	Makefile	/^MAKE_OBJDIR		= $(shell mkdir -p $(subst $(SRCS_DIR), $(OBJS_DIR), $(dir $(SRCS))))$/;"	m
MAKE_OBJDIR	libft/Makefile	/^MAKE_OBJDIR		= $(shell mkdir -p $(subst $(SRCS_DIR), $(OBJS_DIR), $(dir $(SRCS))))$/;"	m
MAN_INC_DIR	Makefile	/^MAN_INC_DIR		= $(BASE_INC_DIR) .\/inc$/;"	m
MAX_CHAR	libft/inc/libft.h	/^# define MAX_CHAR /;"	d
MAX_READ_SIZE	bonus_inc/push_swap_bonus.h	/^# define MAX_READ_SIZE /;"	d
MAX_TEST_COUNT	push_swap_tester/src/const.py	/^MAX_TEST_COUNT = 200$/;"	v
MIMode	.vscode/launch.json	/^			"MIMode": "lldb",$/;"	s	object:configurations.0
NAME	Makefile	/^NAME			= push_swap$/;"	m
NAME	libft/Makefile	/^NAME			= libft.a$/;"	m
NULL_LEN	libft/inc/ft_printf.h	/^# define NULL_LEN /;"	d
NUMBER_OPERATIONS	bonus_inc/push_swap_bonus.h	/^# define NUMBER_OPERATIONS /;"	d
OBJS	Makefile	/^OBJS			= $(subst $(SRCS_DIR), $(OBJS_DIR), $(SRCS:.c=.o))$/;"	m
OBJS	libft/Makefile	/^OBJS			= $(subst $(SRCS_DIR), $(OBJS_DIR), $(SRCS:.c=.o))$/;"	m
OBJS_DIR	Makefile	/^OBJS_DIR		= .\/obj$/;"	m
OBJS_DIR	libft/Makefile	/^OBJS_DIR		= .\/obj\/$/;"	m
OPERATION_NUMBER	inc/push_swap.h	/^# define OPERATION_NUMBER /;"	d
ORANGE	Makefile	/^ORANGE			=	\\033[0;33m$/;"	m
ORANGE	libft/Makefile	/^ORANGE			=	\\033[0;33m$/;"	m
ORIGIN_HEADERS	Makefile	/^ORIGIN_HEADERS	= $(wildcard $(BASE_INC_DIR)\/*.h)$/;"	m
PROJECT_DIR	push_swap_tester/src/const.py	/^PROJECT_DIR = ".."$/;"	v
PUSH_SWAP_BONUS_H	bonus_inc/push_swap_bonus.h	/^# define PUSH_SWAP_BONUS_H$/;"	d
PUSH_SWAP_H	inc/push_swap.h	/^# define PUSH_SWAP_H$/;"	d
PUSH_SWAP_NAME	push_swap_tester/src/const.py	/^PUSH_SWAP_NAME = "push_swap"$/;"	v
PushSwapError	push_swap_tester/src/exception.py	/^class PushSwapError(Exception):$/;"	c
PushSwapTesterHelpFormatter	push_swap_tester/src/parse.py	/^class PushSwapTesterHelpFormatter(RawTextHelpFormatter):$/;"	c
READ_END	libft/inc/get_next_line.h	/^# define READ_END /;"	d
READ_ERROR	libft/inc/get_next_line.h	/^# define READ_ERROR /;"	d
RED	Makefile	/^RED				=	\\033[0;91m$/;"	m
RED	libft/Makefile	/^RED				=	\\033[0;91m$/;"	m
RM	Makefile	/^RM				= rm -rf$/;"	m
RM	libft/Makefile	/^RM				= rm -rf$/;"	m
SHELL	Makefile	/^SHELL = \/bin\/zsh$/;"	m
SHELL	libft/Makefile	/^SHELL = \/bin\/zsh$/;"	m
SRCS	Makefile	/^SRCS 	   		= $(wildcard $(SRCS_DIR)\/*\/*.c)$/;"	m
SRCS	libft/Makefile	/^SRCS 			= $(wildcard $(SRCS_DIR)ft_*\/*.c)$/;"	m
SRCS_DIR	Makefile	/^SRCS_DIR		= .\/src$/;"	m
SRCS_DIR	libft/Makefile	/^SRCS_DIR		= .\/src\/$/;"	m
Tester	push_swap_tester/src/tester.py	/^class Tester:$/;"	c
TesterResult	push_swap_tester/src/tester_result.py	/^class TesterResult:$/;"	c
UPPERCASE_HEX_ARRAY	libft/inc/ft_printf.h	/^# define UPPERCASE_HEX_ARRAY /;"	d
WHITE	Makefile	/^WHITE			=	\\033[0;97m$/;"	m
WHITE	libft/Makefile	/^WHITE			=	\\033[0;97m$/;"	m
YELLOW	Makefile	/^YELLOW			=	\\033[1;93m$/;"	m
YELLOW	libft/Makefile	/^YELLOW			=	\\033[1;93m$/;"	m
__init__	push_swap_tester/src/exception.py	/^    def __init__(self, min: int, max: int) -> None:$/;"	m	class:ArgRangeError	typeref:typename:None
__init__	push_swap_tester/src/exception.py	/^    def __init__(self, path: Path) -> None:$/;"	m	class:CommandNotFoundError	typeref:typename:None
__init__	push_swap_tester/src/exception.py	/^    def __init__(self, path: Path) -> None:$/;"	m	class:ExecutePermissionError	typeref:typename:None
__init__	push_swap_tester/src/parse.py	/^    def __init__($/;"	m	class:PushSwapTesterHelpFormatter	typeref:typename:None
__init__	push_swap_tester/src/tester.py	/^    def __init__(self, **kwargs: Any) -> None:$/;"	m	class:Tester	typeref:typename:None
__str__	push_swap_tester/src/exception.py	/^    def __str__(self) -> str:$/;"	m	class:ArgRangeError	typeref:typename:str
__str__	push_swap_tester/src/exception.py	/^    def __str__(self) -> str:$/;"	m	class:CommandNotFoundError	typeref:typename:str
__str__	push_swap_tester/src/exception.py	/^    def __str__(self) -> str:$/;"	m	class:ExecutePermissionError	typeref:typename:str
__str__	push_swap_tester/src/tester_result.py	/^    def __str__(self) -> str:$/;"	m	class:TesterResult	typeref:typename:str
_append_malloc_str_to_lst	src/main/copy_argv_to_lst.c	/^static size_t	_append_malloc_str_to_lst(char **malloced_arg, t_lst **stack_a)$/;"	f	typeref:typename:size_t	file:
_calculate_procedure	src/main/main.c	/^static void	_calculate_procedure(t_game_lists *game_lists)$/;"	f	typeref:typename:void	file:
_check_digital_input	src/main/copy_argv_to_lst.c	/^static ssize_t	_check_digital_input(const char *string)$/;"	f	typeref:typename:ssize_t	file:
_compress_array	src/main/copy_argv_to_lst.c	/^static void	_compress_array(t_lst **stack_a)$/;"	f	typeref:typename:void	file:
_count_how_large_the_new_node_is	src/main/copy_argv_to_lst.c	/^static size_t	_count_how_large_the_new_node_is(t_lst **stack_a, t_lst *lst_p)$/;"	f	typeref:typename:size_t	file:
_divide	src/strategy/ope_quick_sort.c	/^void	_divide(size_t width, t_game_lists *game)$/;"	f	typeref:typename:void
_exchange_next_node_and_cur_node	src/operate/operate_basic_stack_ope1.c	/^static void	_exchange_next_node_and_cur_node(t_lst *first_p)$/;"	f	typeref:typename:void	file:
_exec_valid_operation	bonus_src/checker_kari.c	/^static bool	_exec_valid_operation(char *string, t_game_lists *game)$/;"	f	typeref:typename:bool	file:
_is_descending_order	src/strategy_helper/append_sa_if_needed.c	/^static bool	_is_descending_order(int first, int second, int third)$/;"	f	typeref:typename:bool	file:
_is_index_among_ascending	src/utils/utils_list_query.c	/^static bool	_is_index_among_ascending(t_lst *prev_p, t_lst *curr_p, int x)$/;"	f	typeref:typename:bool	file:
_is_index_among_descending	src/utils/utils_list_query.c	/^static bool	_is_index_among_descending(t_lst *prev_p, t_lst *curr_p, int x)$/;"	f	typeref:typename:bool	file:
_is_one_three_two	src/strategy_helper/append_sa_if_needed.c	/^static bool	_is_one_three_two(int first, int second, int third)$/;"	f	typeref:typename:bool	file:
_is_two_one_three	src/strategy_helper/append_sa_if_needed.c	/^static bool	_is_two_one_three(int first, int second, int third)$/;"	f	typeref:typename:bool	file:
_operate_ra_rb	src/strategy_helper/select_push_insert.c	/^static void	_operate_ra_rb(t_node *node, t_game_lists *game_lists)$/;"	f	typeref:typename:void	file:
_operate_ra_rrb	src/strategy_helper/select_push_insert.c	/^static void	_operate_ra_rrb(t_node *node, t_game_lists *game_lists)$/;"	f	typeref:typename:void	file:
_operate_rra_rb	src/strategy_helper/select_push_insert.c	/^static void	_operate_rra_rb(t_node *node, t_game_lists *game_lists)$/;"	f	typeref:typename:void	file:
_operate_rra_rrb	src/strategy_helper/select_push_insert.c	/^static void	_operate_rra_rrb(t_node *node, t_game_lists *game_lists)$/;"	f	typeref:typename:void	file:
_pick_top_from_stack	src/operate/operate_basic_stack_ope2.c	/^static t_lst	*_pick_top_from_stack(t_lst **lst_pp)$/;"	f	typeref:typename:t_lst *	file:
_put_data_to_ope_dictionary	bonus_src/checker_kari.c	/^static void	_put_data_to_ope_dictionary($/;"	f	typeref:typename:void	file:
_read_loop	bonus_src/checker_kari.c	/^static void	_read_loop(t_game_lists *game)$/;"	f	typeref:typename:void	file:
_return_min_cost_of_push_insert	src/utils/utils_list_query1.c	/^static int	_return_min_cost_of_push_insert(t_node *node)$/;"	f	typeref:typename:int	file:
_rotate_stack_fastly	src/strategy/ope_three_four_five_node.c	/^static bool	_rotate_stack_fastly(t_lst **lst_pp, t_game_lists *lists, int ra)$/;"	f	typeref:typename:bool	file:
_validate_operation	bonus_src/checker_kari.c	/^static bool	_validate_operation(char *ope_name, char *input)$/;"	f	typeref:typename:bool	file:
all	Makefile	/^all:			$(NAME)$/;"	t
all	libft/Makefile	/^all:			$(NAME)$/;"	t
append_sa_if_needed	src/strategy_helper/append_sa_if_needed.c	/^void	append_sa_if_needed(t_game_lists *game_lists)$/;"	f	typeref:typename:void
append_to_procedure	src/utils/utils_struct_modify.c	/^void	append_to_procedure(t_lst **lst_procedure, const char *string)$/;"	f	typeref:typename:void
args	.vscode/launch.json	/^			"args": [$/;"	a	object:configurations.0
args	.vscode/tasks.json	/^			"args": [$/;"	a	object:tasks.0
asign_array_to_set	libft/src/ft_str/ft_strtrim.c	/^static void	asign_array_to_set(char const *set, unsigned char *used)$/;"	f	typeref:typename:void	file:
bonus	Makefile	/^bonus:			$(BONUS_NAME)$/;"	t
cStandard	src/.vscode/c_cpp_properties.json	/^            "cStandard": "c17",$/;"	s	object:configurations.0
char_content	inc/push_swap.h	/^	char	*char_content;$/;"	m	struct:s_record	typeref:typename:char *
check_last_operation_is	src/utils/utils_list_query1.c	/^bool	check_last_operation_is(const char *str, const t_lst **lst)$/;"	f	typeref:typename:bool
clean	Makefile	/^clean:$/;"	t
clean	libft/Makefile	/^clean:$/;"	t
command	.vscode/tasks.json	/^			"command": "make",$/;"	s	object:tasks.0
compile	Makefile	/^compile:		$(OBJS) $(HEADERS) $(LIBFT_HEADERS)$/;"	t
compile	libft/Makefile	/^compile:		$(OBJS)$/;"	t
compile_bonus	Makefile	/^compile_bonus:	$(BONUS_OBJS) $(BONUS_HEADERS) $(LIBFT_HEADERS)$/;"	t
compilerPath	src/.vscode/c_cpp_properties.json	/^            "compilerPath": "\/usr\/bin\/clang",$/;"	s	object:configurations.0
configurations	.vscode/launch.json	/^	"configurations": [$/;"	a
configurations	src/.vscode/c_cpp_properties.json	/^    "configurations": [$/;"	a
content	libft/inc/libft.h	/^	void				*content;$/;"	m	struct:s_list	typeref:typename:void *
convert_argv_to_str	src/main/copy_argv_to_lst_helper.c	/^char	**convert_argv_to_str(const char *src_str)$/;"	f	typeref:typename:char **
copy_argv_to_lst	src/main/copy_argv_to_lst.c	/^void	copy_argv_to_lst(int argc, char **argv, t_lst **stack_a)$/;"	f	typeref:typename:void
cppStandard	src/.vscode/c_cpp_properties.json	/^            "cppStandard": "c++17",$/;"	s	object:configurations.0
create_node_info_to_insert_to_a	src/utils/utils_list_query1.c	/^void	create_node_info_to_insert_to_a(t_lst *iter_p, t_node *node, t_game_lists *game)$/;"	f	typeref:typename:void
create_node_info_to_insert_to_b	src/utils/utils_list_query1.c	/^void	create_node_info_to_insert_to_b(t_lst *iter_p, t_node *node, t_game_lists *game)$/;"	f	typeref:typename:void
create_record	src/utils/utils_struct_modify.c	/^void	*create_record(const char *str)$/;"	f	typeref:typename:void *
cwd	.vscode/launch.json	/^			"cwd": "${workspaceFolder}",$/;"	s	object:configurations.0
debug	Makefile	/^debug:$/;"	t
debug	libft/Makefile	/^debug:			$(CFLAGS) += -g -fsanitize=address -fsanitize=leaks\\$/;"	t
debug2	Makefile	/^debug2:$/;"	t
debug_func	src/utils/utils_debug.c	/^void	debug_func(const t_game_lists *game)$/;"	f	typeref:typename:void
defines	src/.vscode/c_cpp_properties.json	/^            "defines": [],$/;"	a	object:configurations.0
del_push_swap	src/utils/utils_struct_modify.c	/^void	del_push_swap(void *lst_p)$/;"	f	typeref:typename:void
environment	.vscode/launch.json	/^			"environment": [],$/;"	a	object:configurations.0
exec_command	push_swap_tester/src/tester.py	/^    def exec_command(self, args: list[str]) -> None:$/;"	m	class:Tester	typeref:typename:None
exec_commands	push_swap_tester/src/tester.py	/^    def exec_commands(self) -> None:$/;"	m	class:Tester	typeref:typename:None
externalConsole	.vscode/launch.json	/^			"externalConsole": false,$/;"	b	object:configurations.0
fclean	Makefile	/^fclean:			$/;"	t
fclean	libft/Makefile	/^fclean:			clean$/;"	t
files.associations	.vscode/settings.json	/^	"files.associations": {$/;"	o
format	push_swap_tester/Makefile	/^format:$/;"	t
format_norm	Makefile	/^format_norm:$/;"	t
format_norm	libft/Makefile	/^format_norm:$/;"	t
free_all	libft/src/ft_str/ft_split.c	/^static int	free_all(char **dst, size_t i)$/;"	f	typeref:typename:int	file:
free_all_lists	src/utils/utils_trivial.c	/^void	free_all_lists(t_game_lists *game_lists)$/;"	f	typeref:typename:void
free_then_put_null	libft/src/ft_gnl/get_next_line.c	/^static void	*free_then_put_null(char **pointer)$/;"	f	typeref:typename:void *	file:
ft_atoi	libft/src/ft_to/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f	typeref:typename:int
ft_bzero	libft/src/ft_mem/ft_bzero.c	/^void	ft_bzero(void *str, size_t n)$/;"	f	typeref:typename:void
ft_calloc	libft/src/ft_mem/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f	typeref:typename:void *
ft_dl_lstadd_back_with_lst	libft/src/ft_dl_lst/ft_dl_lst_create_ope.c	/^bool	ft_dl_lstadd_back_with_lst(t_lst **lst_pp, t_lst *new_p)$/;"	f	typeref:typename:bool
ft_dl_lstadd_front_with_lst	libft/src/ft_dl_lst/ft_dl_lst_create_ope.c	/^bool	ft_dl_lstadd_front_with_lst(t_lst **lst_pp, t_lst *new_p)$/;"	f	typeref:typename:bool
ft_dl_lstadd_sentinel_to_node	libft/src/ft_dl_lst/ft_dl_lst_create_ope.c	/^static bool	ft_dl_lstadd_sentinel_to_node(t_lst *lst_pp)$/;"	f	typeref:typename:bool	file:
ft_dl_lstappend	libft/src/ft_dl_lst/ft_dl_lst_create_ope.c	/^bool	ft_dl_lstappend(t_lst **lst_pp, t_record *record_p)$/;"	f	typeref:typename:bool
ft_dl_lstclear	libft/src/ft_dl_lst/ft_dl_lstclear.c	/^void	ft_dl_lstclear(t_lst **lst_pp, void (*del)(void *))$/;"	f	typeref:typename:void
ft_dl_lstcreate_a_node	libft/src/ft_dl_lst/ft_dl_lstcreate_a_node.c	/^t_lst	*ft_dl_lstcreate_a_node(t_record *record_p, size_t is_sentinel)$/;"	f	typeref:typename:t_lst *
ft_dl_lstdelone	libft/src/ft_dl_lst/ft_dl_lstdelone.c	/^void	ft_dl_lstdelone(t_lst *lst_p, void (*del)(void *))$/;"	f	typeref:typename:void
ft_dl_lstlast	libft/src/ft_dl_lst/ft_dl_lstlast.c	/^t_lst	*ft_dl_lstlast(const t_lst *lst_p)$/;"	f	typeref:typename:t_lst *
ft_dl_lstsize	libft/src/ft_dl_lst/ft_dl_lstsize.c	/^size_t	ft_dl_lstsize(const t_lst *lst_p)$/;"	f	typeref:typename:size_t
ft_dl_pf_lst	libft/src/ft_dl_lst/ft_dl_pf_lst.c	/^void	ft_dl_pf_lst(const t_lst *lst_p,$/;"	f	typeref:typename:void
ft_four_min	src/utils/utils_basic.c	/^int	ft_four_min(int a, int b, int c, int d)$/;"	f	typeref:typename:int
ft_isalnum	libft/src/ft_is/ft_isalnum.c	/^int	ft_isalnum(int i)$/;"	f	typeref:typename:int
ft_isalpha	libft/src/ft_is/ft_isalpha.c	/^int	ft_isalpha(int i)$/;"	f	typeref:typename:int
ft_isascii	libft/src/ft_is/ft_isascii.c	/^int	ft_isascii(int i)$/;"	f	typeref:typename:int
ft_isdigit	libft/src/ft_is/ft_isdigit.c	/^int	ft_isdigit(int i)$/;"	f	typeref:typename:int
ft_isprint	libft/src/ft_is/ft_isprint.c	/^int	ft_isprint(int i)$/;"	f	typeref:typename:int
ft_itoa	libft/src/ft_to/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_lstadd_back	libft/src/ft_lst/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst_pp, t_list *new_p)$/;"	f	typeref:typename:void
ft_lstadd_front	libft/src/ft_lst/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst_pp, t_list *new_p)$/;"	f	typeref:typename:void
ft_lstclear	libft/src/ft_lst/ft_lstclear.c	/^void	ft_lstclear(t_list **lst_pp, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstdelone	libft/src/ft_lst/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst_p, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstiter	libft/src/ft_lst/ft_lstiter.c	/^void	ft_lstiter(t_list *lst_p, void (*f)(void *))$/;"	f	typeref:typename:void
ft_lstlast	libft/src/ft_lst/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst_p)$/;"	f	typeref:typename:t_list *
ft_lstmap	libft/src/ft_lst/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *old_p, void *(*f)(void *), void (*del)(void *))$/;"	f	typeref:typename:t_list *
ft_lstnew	libft/src/ft_lst/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f	typeref:typename:t_list *
ft_lstsize	libft/src/ft_lst/ft_lstsize.c	/^int	ft_lstsize(t_list *lst_p)$/;"	f	typeref:typename:int
ft_max	src/utils/utils_basic.c	/^int	ft_max(int a, int b)$/;"	f	typeref:typename:int
ft_memchr	libft/src/ft_mem/ft_memchr.c	/^void	*ft_memchr(const void *str, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	libft/src/ft_mem/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	libft/src/ft_mem/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memmove	libft/src/ft_mem/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memset	libft/src/ft_mem/ft_memset.c	/^void	*ft_memset(void *str, int c, size_t n)$/;"	f	typeref:typename:void *
ft_min	src/utils/utils_basic.c	/^int	ft_min(int a, int b)$/;"	f	typeref:typename:int
ft_numlen	libft/src/ft_to/ft_itoa.c	/^static size_t	ft_numlen(int n)$/;"	f	typeref:typename:size_t	file:
ft_printf	libft/src/ft_printf/ft_printf.c	/^int	ft_printf(const char *fmt, ...)$/;"	f	typeref:typename:int
ft_putchar_fd	libft/src/ft_printf/ft_printf_put_utiles.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putchar_fd	libft/src/ft_put/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putendl_fd	libft/src/ft_put/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putnbr_fd	libft/src/ft_printf/ft_printf_put_utiles.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putnbr_fd	libft/src/ft_put/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putpointer_fd	libft/src/ft_printf/ft_printf_put_utiles.c	/^void	ft_putpointer_fd(unsigned long long n, int fd)$/;"	f	typeref:typename:void
ft_putstr_fd	libft/src/ft_printf/ft_printf_put_utiles.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putstr_fd	libft/src/ft_put/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putunbr_fd	libft/src/ft_printf/ft_printf_put_utiles.c	/^void	ft_putunbr_fd(unsigned int un, int fd, char c)$/;"	f	typeref:typename:void
ft_split	libft/src/ft_str/ft_split.c	/^char	**ft_split(char const *str, char sep)$/;"	f	typeref:typename:char **
ft_splitexec	libft/src/ft_str/ft_split.c	/^static int	ft_splitexec(char **dst, char const *str, char sep)$/;"	f	typeref:typename:int	file:
ft_strchr	libft/src/ft_printf/ft_printf_utiles.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strchr	libft/src/ft_str/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strdup	libft/src/ft_str/ft_strdup.c	/^char	*ft_strdup(const char *src)$/;"	f	typeref:typename:char *
ft_striteri	libft/src/ft_str/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f	typeref:typename:void
ft_strjoin	libft/src/ft_str/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strlcat	libft/src/ft_str/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t dstsize)$/;"	f	typeref:typename:size_t
ft_strlcpy	libft/src/ft_str/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlen	libft/src/ft_printf/ft_printf_utiles.c	/^size_t	ft_strlen(const char *str)$/;"	f	typeref:typename:size_t
ft_strlen	libft/src/ft_str/ft_strlen.c	/^size_t	ft_strlen(const char *str)$/;"	f	typeref:typename:size_t
ft_strmapi	libft/src/ft_str/ft_strmapi.c	/^char	*ft_strmapi(char const *str, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	libft/src/ft_str/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strnstr	libft/src/ft_str/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	libft/src/ft_str/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	libft/src/ft_str/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_substr	libft/src/ft_str/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_tolower	libft/src/ft_to/ft_tolower.c	/^int	ft_tolower(int i)$/;"	f	typeref:typename:int
ft_toupper	libft/src/ft_to/ft_toupper.c	/^int	ft_toupper(int i)$/;"	f	typeref:typename:int
generate_args	push_swap_tester/src/gen_int.py	/^def generate_args($/;"	f	typeref:typename:list[tuple[int,...]]
generate_args	push_swap_tester/src/tester.py	/^    def generate_args(self) -> list[tuple[int, ...]]:$/;"	m	class:Tester	typeref:typename:list[tuple[int,...]]
generate_permutations	push_swap_tester/src/gen_int.py	/^def generate_permutations(num: int, min: int, max: int) -> list[tuple[int, ...]]:$/;"	f	typeref:typename:list[tuple[int,...]]
generate_randints	push_swap_tester/src/gen_int.py	/^def generate_randints($/;"	f	typeref:typename:list[tuple[int,...]]
get_char_of	src/utils/utils_struct_get_context.c	/^char	*get_char_of(const t_lst *lst_p)$/;"	f	typeref:typename:char *
get_index_of	src/utils/utils_struct_get_context.c	/^size_t	get_index_of(const t_lst *lst_p)$/;"	f	typeref:typename:size_t
get_int_value_of	src/utils/utils_struct_get_context.c	/^int	get_int_value_of(const t_lst *lst_p)$/;"	f	typeref:typename:int
get_min_cost_to_push	src/utils/utils_struct_get_context.c	/^size_t	get_min_cost_to_push(t_lst **lst_pp, const t_lst *iter_p)$/;"	f	typeref:typename:size_t
get_next_line	libft/src/ft_gnl/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_next_line.h	.vscode/settings.json	/^		"get_next_line.h": "c"$/;"	s	object:files.associations
get_one_line	libft/src/ft_gnl/get_next_line.c	/^static char	*get_one_line(char **whole_str, char *nl_pos)$/;"	f	typeref:typename:char *	file:
get_rotate_cost	src/utils/utils_struct_get_context.c	/^size_t	get_rotate_cost(t_lst **lst_pp, const t_lst *lst_p)$/;"	f	typeref:typename:size_t
get_whole_str_from_read	libft/src/ft_gnl/get_next_line.c	/^static size_t	get_whole_str_from_read(int fd, char **whole_str)$/;"	f	typeref:typename:size_t	file:
gnl_join_then_free	libft/src/ft_gnl/get_next_line_utils.c	/^char	*gnl_join_then_free(char **s1, char const *s2)$/;"	f	typeref:typename:char *
gnl_strchr	libft/src/ft_gnl/get_next_line_utils.c	/^char	*gnl_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
gnl_strlcpy	libft/src/ft_gnl/get_next_line_utils.c	/^size_t	gnl_strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
gnl_strlen	libft/src/ft_gnl/get_next_line_utils.c	/^size_t	gnl_strlen(const char *str)$/;"	f	typeref:typename:size_t
gnl_strndup	libft/src/ft_gnl/get_next_line_utils.c	/^char	*gnl_strndup(const char *src, size_t n)$/;"	f	typeref:typename:char *
group	.vscode/tasks.json	/^			"group": "build",$/;"	s	object:tasks.0
handle_abnormal_input	src/utils/utils_trivial.c	/^int	handle_abnormal_input(void)$/;"	f	typeref:typename:int
has_duplicate_value	src/main/copy_argv_to_lst_helper.c	/^ssize_t	has_duplicate_value(const t_lst *iter_p)$/;"	f	typeref:typename:ssize_t
includePath	src/.vscode/c_cpp_properties.json	/^            "includePath": [$/;"	a	object:configurations.0
index	bonus_inc/push_swap_bonus.h	/^	size_t	index;$/;"	m	struct:s_operation_dictionary	typeref:typename:size_t
index	inc/push_swap.h	/^	size_t	index;$/;"	m	struct:s_record	typeref:typename:size_t
init_praser	push_swap_tester/src/parse.py	/^def init_praser() -> ArgumentParser:$/;"	f	typeref:typename:ArgumentParser
int_data	inc/push_swap.h	/^	int		int_data;$/;"	m	struct:s_record	typeref:typename:int
intelliSenseMode	src/.vscode/c_cpp_properties.json	/^            "intelliSenseMode": "macos-clang-arm64"$/;"	s	object:configurations.0
is_ascending_order	src/utils/utils_list_query.c	/^bool	is_ascending_order(const t_lst *iter_p)$/;"	f	typeref:typename:bool
is_sentinel	libft/inc/libft.h	/^	size_t				is_sentinel;$/;"	m	struct:s_lst	typeref:typename:size_t
is_space	libft/src/ft_to/ft_atoi.c	/^static int	is_space(char c)$/;"	f	typeref:typename:int	file:
label	.vscode/tasks.json	/^			"label": "compile push swap",$/;"	s	object:tasks.0
lint	push_swap_tester/Makefile	/^lint:$/;"	t
lst_p	inc/push_swap.h	/^	t_lst	*lst_p;$/;"	m	struct:s_node	typeref:typename:t_lst *
lst_procedure	inc/push_swap.h	/^	t_lst	*lst_procedure;$/;"	m	struct:s_game_lists	typeref:typename:t_lst *
macFrameworkPath	src/.vscode/c_cpp_properties.json	/^            "macFrameworkPath": [$/;"	a	object:configurations.0
main	bonus_src/checker_kari.c	/^int	main(int argc, char **argv)$/;"	f	typeref:typename:int
main	push_swap_tester/push_swap_tester.py	/^def main() -> None:$/;"	f	typeref:typename:None
main	src/main/main.c	/^int	main(int argc, char **argv)$/;"	f	typeref:typename:int
min_cost	inc/push_swap.h	/^	int		min_cost;$/;"	m	struct:s_node	typeref:typename:int
name	.vscode/launch.json	/^			"name": "lldb debug",$/;"	s	object:configurations.0
name	src/.vscode/c_cpp_properties.json	/^            "name": "Mac",$/;"	s	object:configurations.0
next	libft/inc/libft.h	/^	struct s_list		*next;$/;"	m	struct:s_list	typeref:struct:s_list *
next_p	libft/inc/libft.h	/^	t_lst				*next_p;$/;"	m	struct:s_lst	typeref:typename:t_lst *
norm	Makefile	/^norm:$/;"	t
norm	libft/Makefile	/^norm:$/;"	t
omni_p	inc/push_swap.h	/^	void	*omni_p;$/;"	m	struct:s_record	typeref:typename:void *
ope_bubble_sort	src/strategy/ope_bubble_sort.c	/^void	ope_bubble_sort(t_game_lists *game)$/;"	f	typeref:typename:void
ope_quick_sort	src/strategy/ope_quick_sort.c	/^void	ope_quick_sort(t_game_lists *game)$/;"	f	typeref:typename:void
ope_select_insert	src/strategy/ope_select_insert.c	/^void	ope_select_insert(t_game_lists *game)$/;"	f	typeref:typename:void
ope_three_four_five_node	src/strategy/ope_three_four_five_node.c	/^void	ope_three_four_five_node(t_game_lists *game_lists)$/;"	f	typeref:typename:void
operate_pa	src/operate/operate_stack_a.c	/^bool	operate_pa(t_game_lists *game_lists)$/;"	f	typeref:typename:bool
operate_pb	src/operate/operate_stack_b.c	/^bool	operate_pb(t_game_lists *game_lists)$/;"	f	typeref:typename:bool
operate_push_top_to_another_stack	src/operate/operate_basic_stack_ope2.c	/^bool	operate_push_top_to_another_stack(t_lst **src_pp, t_lst **dst_pp)$/;"	f	typeref:typename:bool
operate_ra	src/operate/operate_stack_a.c	/^bool	operate_ra(t_game_lists *game_lists)$/;"	f	typeref:typename:bool
operate_rb	src/operate/operate_stack_b.c	/^bool	operate_rb(t_game_lists *game_lists)$/;"	f	typeref:typename:bool
operate_rev_rotate_top_and_tail	src/operate/operate_basic_stack_ope1.c	/^void	operate_rev_rotate_top_and_tail(t_lst **lst_pp)$/;"	f	typeref:typename:void
operate_rotate_top_and_tail	src/operate/operate_basic_stack_ope1.c	/^void	operate_rotate_top_and_tail(t_lst **lst_pp)$/;"	f	typeref:typename:void
operate_rr	src/operate/operate_both_stack.c	/^bool	operate_rr(t_game_lists *game_lists)$/;"	f	typeref:typename:bool
operate_rra	src/operate/operate_stack_a.c	/^bool	operate_rra(t_game_lists *game_lists)$/;"	f	typeref:typename:bool
operate_rrb	src/operate/operate_stack_b.c	/^bool	operate_rrb(t_game_lists *game_lists)$/;"	f	typeref:typename:bool
operate_rrr	src/operate/operate_both_stack.c	/^bool	operate_rrr(t_game_lists *game_lists)$/;"	f	typeref:typename:bool
operate_sa	src/operate/operate_stack_a.c	/^bool	operate_sa(t_game_lists *game_lists)$/;"	f	typeref:typename:bool
operate_sb	src/operate/operate_stack_b.c	/^bool	operate_sb(t_game_lists *game_lists)$/;"	f	typeref:typename:bool
operate_ss	src/operate/operate_both_stack.c	/^bool	operate_ss(t_game_lists *game_lists)$/;"	f	typeref:typename:bool
operate_swap_top_and_second_top	src/operate/operate_basic_stack_ope1.c	/^void	operate_swap_top_and_second_top(t_lst **lst_pp)$/;"	f	typeref:typename:void
operation_function	bonus_inc/push_swap_bonus.h	/^	bool	(*operation_function)(t_game_lists *);$/;"	m	struct:s_operation_dictionary	typeref:typename:bool (*)(t_game_lists *)
operation_name	bonus_inc/push_swap_bonus.h	/^	char	*operation_name;$/;"	m	struct:s_operation_dictionary	typeref:typename:char *
optimize_procedure	src/utils/utils_trivial.c	/^void	optimize_procedure(t_lst **lst_procedure)$/;"	f	typeref:typename:void
output_result	push_swap_tester/src/tester.py	/^    def output_result(self) -> None:$/;"	m	class:Tester	typeref:typename:None
output_va	libft/src/ft_printf/ft_printf.c	/^static void	output_va(va_list *ap, const char c, struct s_main *t_info)$/;"	f	typeref:typename:void	file:
parse_arguments	push_swap_tester/src/parse.py	/^def parse_arguments(args: List[str]) -> Namespace:$/;"	f	typeref:typename:Namespace
payload_p	libft/inc/libft.h	/^	t_record			*payload_p;$/;"	m	struct:s_lst	typeref:typename:t_record *
pf_calculate_long_len	libft/src/ft_printf/ft_printf_calculate_len_utils.c	/^void	pf_calculate_long_len(long long ll, char c, struct s_main *t_info)$/;"	f	typeref:typename:void
pf_calculate_str_len	libft/src/ft_printf/ft_printf_calculate_len_utils.c	/^void	pf_calculate_str_len(char *str, struct s_main *t_info)$/;"	f	typeref:typename:void
pf_calculate_ull_len	libft/src/ft_printf/ft_printf_calculate_len_utils.c	/^void	pf_calculate_ull_len(unsigned long long ull, int base,$/;"	f	typeref:typename:void
pf_process_int	libft/src/ft_printf/ft_printf.c	/^static void	pf_process_int(char c, va_list *ap, struct s_main *t_info)$/;"	f	typeref:typename:void	file:
pf_process_unsigned_int	libft/src/ft_printf/ft_printf.c	/^static void	pf_process_unsigned_int(char c, va_list *ap, struct s_main *t_info)$/;"	f	typeref:typename:void	file:
pf_process_unsigned_ll	libft/src/ft_printf/ft_printf.c	/^static void	pf_process_unsigned_ll(va_list *ap, struct s_main *t_info)$/;"	f	typeref:typename:void	file:
positive_int	push_swap_tester/src/parse.py	/^def positive_int(string: str) -> int:$/;"	f	typeref:typename:int
preLaunchTask	.vscode/launch.json	/^			"preLaunchTask": "compile push swap"$/;"	s	object:configurations.0
presentation	.vscode/tasks.json	/^			"presentation": {$/;"	o	object:tasks.0
prev_p	libft/inc/libft.h	/^	t_lst				*prev_p;$/;"	m	struct:s_lst	typeref:typename:t_lst *
print_TEST	Makefile	/^print_TEST:$/;"	t
print_ascending_direction	libft/src/ft_dl_lst/ft_dl_pf_lst.c	/^static void	print_ascending_direction(const t_lst *lst_p,$/;"	f	typeref:typename:void	file:
print_colored	push_swap_tester/src/print.py	/^def print_colored(text: str, code: int, **kwargs: Any) -> None:$/;"	f	typeref:typename:None
print_index	src/utils/utils_debug.c	/^void	print_index(const t_lst **lst_pp)$/;"	f	typeref:typename:void
print_procedure	src/utils/utils_trivial.c	/^void	print_procedure(const t_lst *i_p)$/;"	f	typeref:typename:void
process_command_result	push_swap_tester/src/tester.py	/^    def process_command_result($/;"	m	class:Tester	typeref:typename:None
program	.vscode/launch.json	/^			"program": "${workspaceFolder}\/push_swap",$/;"	s	object:configurations.0
prt_len	libft/inc/ft_printf.h	/^	size_t	prt_len;$/;"	m	struct:s_main	typeref:typename:size_t
push_swap_tester	push_swap_tester/README.md	/^# push_swap_tester$/;"	c
ra	inc/push_swap.h	/^	int		ra;$/;"	m	struct:s_node	typeref:typename:int
rb	inc/push_swap.h	/^	int		rb;$/;"	m	struct:s_node	typeref:typename:int
re	Makefile	/^re:				fclean$/;"	t
re	libft/Makefile	/^re:				fclean$/;"	t
request	.vscode/launch.json	/^			"request": "launch",$/;"	s	object:configurations.0
return_num_to_ascending	src/utils/utils_list_query.c	/^size_t	return_num_to_ascending(t_lst **lst_pp, const t_lst *node_p)$/;"	f	typeref:typename:size_t
return_num_to_descending	src/utils/utils_list_query.c	/^size_t	return_num_to_descending(t_lst **lst_pp, const t_lst *node_p)$/;"	f	typeref:typename:size_t
return_optimal_lst_p	src/strategy/ope_select_insert.c	/^void	return_optimal_lst_p(t_node *node_info, t_lst **lst_pp,$/;"	f	typeref:typename:void
rotate_both_stack_for_push	src/strategy_helper/select_push_insert.c	/^void	rotate_both_stack_for_push(t_node *node_info, t_game_lists *game_lists)$/;"	f	typeref:typename:void
rra	inc/push_swap.h	/^	int		rra;$/;"	m	struct:s_node	typeref:typename:int
rrb	inc/push_swap.h	/^	int		rrb;$/;"	m	struct:s_node	typeref:typename:int
s_game_lists	inc/push_swap.h	/^typedef struct s_game_lists$/;"	s
s_list	libft/inc/libft.h	/^typedef struct s_list$/;"	s
s_lst	libft/inc/libft.h	/^typedef struct s_lst$/;"	s
s_main	libft/inc/ft_printf.h	/^struct		s_main$/;"	s
s_node	inc/push_swap.h	/^typedef struct s_node$/;"	s
s_operation_dictionary	bonus_inc/push_swap_bonus.h	/^typedef struct s_operation_dictionary$/;"	s
s_record	inc/push_swap.h	/^typedef struct s_record$/;"	s
show_op_count	push_swap_tester/src/tester.py	/^    def show_op_count(self) -> None:$/;"	m	class:Tester	typeref:typename:None
sort_stack_use_ra_rra	src/utils/utils_list_cmds.c	/^void	sort_stack_use_ra_rra(t_lst **lst_pp, t_game_lists *game_lists)$/;"	f	typeref:typename:void
sort_stack_use_rb_rrb	src/utils/utils_list_cmds.c	/^void	sort_stack_use_rb_rrb(t_lst **lst_pp, t_game_lists *game_lists)$/;"	f	typeref:typename:void
stack_a	inc/push_swap.h	/^	t_lst	*stack_a;$/;"	m	struct:s_game_lists	typeref:typename:t_lst *
stack_b	inc/push_swap.h	/^	t_lst	*stack_b;$/;"	m	struct:s_game_lists	typeref:typename:t_lst *
status_check	Makefile	/^status_check:$/;"	t
status_check	libft/Makefile	/^status_check:$/;"	t
stopAtEntry	.vscode/launch.json	/^			"stopAtEntry": false,$/;"	b	object:configurations.0
t_game_lists	inc/push_swap.h	/^}			t_game_lists;$/;"	t	typeref:struct:s_game_lists
t_list	libft/inc/libft.h	/^}						t_list;$/;"	t	typeref:struct:s_list
t_lst	libft/inc/libft.h	/^typedef struct s_lst	t_lst;$/;"	t	typeref:struct:s_lst
t_lst	libft/inc/libft.h	/^}						t_lst;$/;"	t	typeref:struct:s_lst
t_node	inc/push_swap.h	/^}			t_node;$/;"	t	typeref:struct:s_node
t_operation_dictionary	bonus_inc/push_swap_bonus.h	/^}			t_operation_dictionary;$/;"	t	typeref:struct:s_operation_dictionary
t_record	inc/push_swap.h	/^}			t_record;$/;"	t	typeref:struct:s_record
t_record	libft/inc/libft.h	/^typedef struct s_record	t_record;$/;"	t	typeref:struct:s_record
tasks	.vscode/tasks.json	/^	"tasks": [$/;"	a
test	push_swap_tester/Makefile	/^test:$/;"	t
test_generate_randint	push_swap_tester/tests/src/test_gen_int.py	/^def test_generate_randint(min: int, max: int) -> None:$/;"	f	typeref:typename:None
test_parse_arguments_error	push_swap_tester/tests/src/test_parse.py	/^def test_parse_arguments_error(args: list[str]) -> None:$/;"	f	typeref:typename:None
test_parse_arguments_gen	push_swap_tester/tests/src/test_parse.py	/^def test_parse_arguments_gen() -> None:$/;"	f	typeref:typename:None
test_parse_arguments_no_arg	push_swap_tester/tests/src/test_parse.py	/^def test_parse_arguments_no_arg() -> None:$/;"	f	typeref:typename:None
test_parse_arguments_normal	push_swap_tester/tests/src/test_parse.py	/^def test_parse_arguments_normal() -> None:$/;"	f	typeref:typename:None
type	.vscode/launch.json	/^			"type": "cppdbg",$/;"	s	object:configurations.0
type	.vscode/tasks.json	/^			"type": "shell",$/;"	s	object:tasks.0
validate_arguments	push_swap_tester/src/parse.py	/^def validate_arguments(parser: ArgumentParser, ret: Namespace) -> None:$/;"	f	typeref:typename:None
validate_dir	push_swap_tester/src/parse.py	/^def validate_dir(parser: ArgumentParser, ret: Namespace) -> None:$/;"	f	typeref:typename:None
validate_executable	push_swap_tester/src/tester.py	/^    def validate_executable(self, command: Path) -> None:$/;"	m	class:Tester	typeref:typename:None
validate_range	push_swap_tester/src/parse.py	/^def validate_range(parser: ArgumentParser, ret: Namespace) -> None:$/;"	f	typeref:typename:None
version	src/.vscode/c_cpp_properties.json	/^    "version": 4$/;"	n
visual	Makefile	/^visual:			all$/;"	t
wc	libft/src/ft_str/ft_split.c	/^static size_t	wc(char *str, char sep)$/;"	f	typeref:typename:size_t	file:
オプション	push_swap_tester/README.md	/^#### オプション$/;"	t	subsection:push_swap_tester""使い方""テストの実行
コマンド例	push_swap_tester/README.md	/^#### コマンド例$/;"	t	subsection:push_swap_tester""使い方""テストの実行
テストの実行	push_swap_tester/README.md	/^### テストの実行$/;"	S	section:push_swap_tester""使い方
テスト用の引数生成	push_swap_tester/README.md	/^### テスト用の引数生成$/;"	S	section:push_swap_tester""使い方
ヘルプ	push_swap_tester/README.md	/^### ヘルプ$/;"	S	section:push_swap_tester""使い方
使い方	push_swap_tester/README.md	/^## 使い方$/;"	s	chapter:push_swap_tester
例	push_swap_tester/README.md	/^#### 例$/;"	t	subsection:push_swap_tester""使い方""テスト用の引数生成
機能	push_swap_tester/README.md	/^## 機能$/;"	s	chapter:push_swap_tester
